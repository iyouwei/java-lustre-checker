type VOTE3 = struct {I1: binary; I2: binary; I3: binary};
type binary = struct {value: bool; status: bool};
const THIRD_INPUT : int = 3;
const VALUE_0 : bool = false;
const FOURTH_INPUT : int = 4;
const NO_INPUT : int = 0;
const NO_FAULT : bool = false;
const FIRST_INPUT : int = 1;
const SECOND_INPUT : int = 2;
const VALUE_1 : bool = true;

node make_binary(value : bool; status : bool) returns (result : binary);
let
	result = result {value := value};
	-- result = result {status := status};
tel;

node make_VOTE3(I1 : binary; I2 : binary; I3 : binary) returns (result : VOTE3);
let
	result = result {I1 := I1};
	-- result = result {I2 := I2};
	-- result = result {I3 := I3};
tel;

node flatten_VOTE3(result : VOTE3) returns (I1 : binary; I2 : binary; I3 : binary);
let
	I1 = result.I1;
	I2 = result.I2;
	I3 = result.I3;
tel;

node Vote_2_4_0_RFA(I1 : binary; I2 : binary; I3 : binary; I4 : binary) returns (O1 : binary);
var
	Local_N_1 : binary;
	Local_N_2 : binary;
	Local_N_3 : binary;
	Local_number_NF : int;
	Local_number_NV : int;
	L5482 : int;
	L5461 : bool;
	L5485 : int;
	L5484 : int;
	L5466 : bool;
	L5462 : bool;
	L5483 : int;
	L5468 : binary;
	L5471 : bool;
	L5474 : bool;
	L5469 : bool;
	L5478 : bool;
	L5459 : bool;
	L5458 : bool;
	L5476 : bool;
	L5460 : bool;
	L5467 : bool;
	L68 : VOTE3;
	L66 : binary;
	L67 : VOTE3;
	L69 : bool;
	L21 : bool;
	L17 : binary;
	L34 : binary;
	L18 : binary;
	L16 : binary;
	L65 : binary;
	L23 : bool;
	L20 : bool;
	L53 : VOTE3;
	L54 : VOTE3;
	L55 : binary;
	L56 : binary;
	L59 : binary;
	L57 : binary;
	L60 : binary;
	L61 : binary;
	L58 : VOTE3;
	L62 : bool;
	L63 : binary;
	L64 : binary;
	L76 : binary;
	L77 : bool;
	L42 : VOTE3;
	L38 : bool;
	L93 : binary;
	L73 : binary;
	L72 : binary;
	L70 : binary;
	L75 : VOTE3;
	L48 : VOTE3;
	L14 : binary;
	L47 : binary;
	L71 : VOTE3;
	L78 : VOTE3;
	L81 : binary;
	L41 : VOTE3;
	L46 : binary;
	L39 : VOTE3;
	L35 : VOTE3;
	L40 : bool;
	L37 : VOTE3;
	L36 : bool;
	L82 : binary;
	L50 : binary;
	L83 : binary;
	L44 : VOTE3;
	L74 : binary;
	L49 : binary;
	L45 : binary;
	L85 : binary;
	L79 : VOTE3;
	L43 : bool;
	L80 : binary;
	L84 : binary;
	L12 : binary;
	L25 : bool;
	L19 : bool;
	L94 : binary;
	L95 : binary;
	L33 : binary;
	L10 : binary;
	L31 : binary;
	L26 : bool;
	L11 : binary;
	L15 : binary;
	L29 : binary;
	L30 : binary;
	L97 : binary;
	L13 : binary;
	L24 : bool;
	L28 : bool;
	L27 : bool;
	L51 : binary;
	L5126 : VOTE3;
	L52 : bool;
	L5127 : VOTE3;
	L32 : binary;
	L5170 : int;
	L5128 : VOTE3;
	L98 : binary;
	L99 : binary;
	L9 : binary;
	L22 : bool;
	L5171 : VOTE3;
	L326 : bool;
	L276 : bool;
	L280 : bool;
	L260 : binary;
	L295 : bool;
	L247 : binary;
	L233 : binary;
	L261 : binary;
	L321 : bool;
	L329 : bool;
	L331 : int;
	L328 : bool;
	L330 : int;
	L332 : bool;
	L304 : bool;
	L201 : binary;
	L248 : binary;
	L259 : binary;
	L278 : bool;
	L222 : binary;
	L327 : bool;
	L249 : binary;
	L343 : int;
	L298 : bool;
	L264 : bool;
	L262 : binary;
	L335 : int;
	L323 : bool;
	L325 : bool;
	L341 : int;
	L322 : bool;
	L340 : int;
	L296 : bool;
	L302 : bool;
	L317 : bool;
	L236 : binary;
	L277 : bool;
	L299 : bool;
	L324 : bool;
	L266 : bool;
	L300 : bool;
	L297 : bool;
	L301 : bool;
	L333 : int;
	L246 : binary;
	L269 : bool;
	L313 : bool;
	L265 : bool;
	L263 : bool;
	L234 : binary;
	L200 : binary;
	L223 : binary;
	L272 : bool;
	L274 : bool;
	L267 : bool;
	L338 : int;
	L235 : binary;
	L273 : bool;
	L270 : bool;
	L268 : bool;
	L309 : bool;
	L339 : bool;
	L336 : bool;
	L271 : bool;
	L337 : int;
	L938 : bool;
	L1013 : bool;
	L1014 : bool;
	L1012 : binary;
	L936 : bool;
	L995 : binary;
	L1010 : binary;
	L1009 : bool;
	L1011 : binary;
	L988 : bool;
	L1019 : bool;
	L997 : bool;
	L994 : binary;
	L998 : int;
	L999 : bool;
	L1002 : bool;
	L1004 : bool;
	L1015 : bool;
	L1000 : int;
	L1001 : int;
	L1006 : bool;
	L1133 : int;
	L1134 : int;
	L990 : bool;
	L1135 : int;
	L1136 : bool;
	L1138 : int;
	L996 : bool;
	L1137 : int;
	L1139 : int;
	L1061 : binary;
	L1068 : bool;
	L1065 : bool;
	L1059 : binary;
	L1060 : binary;
	L1070 : bool;
	L1062 : binary;
	L1063 : bool;
	L1066 : bool;
	L1067 : bool;
	L1056 : bool;
	L1069 : bool;
	L1064 : bool;
	L544 : bool;
	L545 : bool;
	L547 : bool;
	L351 : bool;
	L948 : binary;
	L946 : binary;
	L951 : bool;
	L1114 : bool;
	L952 : bool;
	L352 : bool;
	L953 : bool;
	L546 : bool;
	L950 : bool;
	L542 : bool;
	L976 : bool;
	L977 : int;
	L979 : int;
	L1097 : bool;
	L741 : bool;
	L978 : int;
	L348 : bool;
	L745 : bool;
	L972 : int;
	L974 : int;
	L548 : bool;
	L744 : bool;
	L347 : bool;
	L739 : bool;
	L1095 : bool;
	L350 : bool;
	L1096 : bool;
	L971 : int;
	L970 : bool;
	L742 : bool;
	L973 : bool;
	L743 : bool;
	L344 : binary;
	L975 : int;
	L349 : bool;
	L1094 : bool;
	L969 : bool;
	L959 : bool;
	L960 : int;
	L961 : int;
	L986 : bool;
	L1038 : int;
	L1041 : bool;
	L981 : int;
	L1042 : int;
	L1044 : int;
	L1047 : int;
	L1049 : bool;
	L1050 : bool;
	L1048 : int;
	L1040 : int;
	L957 : int;
	L962 : int;
	L963 : binary;
	L965 : bool;
	L966 : bool;
	L1051 : bool;
	L967 : bool;
	L1046 : int;
	L964 : binary;
	L1115 : bool;
	L980 : bool;
	L955 : int;
	L1053 : bool;
	L1045 : bool;
	L954 : int;
	L958 : bool;
	L1119 : int;
	L1037 : bool;
	L940 : bool;
	L944 : binary;
	L1035 : bool;
	L1123 : int;
	L1121 : bool;
	L939 : bool;
	L941 : bool;
	L1116 : bool;
	L1124 : bool;
	L1131 : int;
	L1036 : bool;
	L1118 : bool;
	L1120 : int;
	L1023 : bool;
	L1117 : bool;
	L1034 : bool;
	L942 : bool;
	L1132 : int;
	L1122 : int;
	L1029 : bool;
	L1127 : bool;
	L1130 : int;
let
	L5466 = if L5484 = 2 then L5478 else if L5484 = 0 then L5461 else if L5484 = 1 then L5478 else L5461;
	L5476 = if L5483 = 2 then L5459 else if L5483 = 1 then L5462 else if L5483 = 3 then L5459 else if L5483 = 0 then L5462 else L5462;
	L5474 = if L5482 = 3 then L5469 else if L5482 = 2 then L5469 else if L5482 = 4 then L5469 else if L5482 = 1 then L5460 else if L5482 = 0 then L5460 else L5460;
	L5458 = if L5485 = 2 then L5466 else if L5485 = 3 then L5476 else if L5485 = 1 then L5471 else if L5485 = 4 then L5474 else if L5485 = 0 then L5471 else L5471;
	L5468 = make_binary(L5458, L5467);
	L5478 = VALUE_1;
	L5461 = VALUE_0;
	L5459 = VALUE_1;
	L5462 = VALUE_0;
	L5469 = VALUE_1;
	L5460 = VALUE_0;
	L5471 = VALUE_0;
	L5467 = NO_FAULT;
	O1 = L5468;
	L5485 = Local_number_NF;
	L5484 = Local_number_NV;
	L5483 = Local_number_NV;
	L5482 = Local_number_NV;
	L19 = L9.status;
	L20 = L10.status;
	L21 = L11.status;
	L22 = L12.status;
	L23 = L13.status;
	L24 = L14.status;
	L25 = L15.status;
	L26 = L16.status;
	L27 = L17.status;
	L28 = L18.status;
	L36 = L19 and L20;
	L38 = L21 and L22;
	L40 = L23 and L24;
	L43 = L25 and L26;
	L52 = L27 and L28;
	L35 = make_VOTE3(L29, L30, L31);
	L37 = make_VOTE3(L32, L33, L34);
	L5126 = if L36 then L35 else L39;
	L39 = if L38 then L37 else L41;
	L41 = if L40 then L44 else L42;
	L42 = if L43 then L48 else L53;
	L53 = if L52 then L54 else L58;
	L44 = make_VOTE3(L45, L46, L47);
	L48 = make_VOTE3(L49, L50, L51);
	L54 = make_VOTE3(L56, L55, L57);
	L58 = make_VOTE3(L59, L60, L61);
	L62 = L63.status;
	L69 = L70.status;
	L77 = L76.status;
	L67 = make_VOTE3(L64, L65, L66);
	L5127 = if L62 then L67 else L68;
	L68 = if L69 then L75 else L71;
	L71 = if L77 then L78 else L79;
	L75 = make_VOTE3(L72, L73, L74);
	L78 = make_VOTE3(L80, L81, L82);
	L79 = make_VOTE3(L83, L84, L85);
	L97, L98, L99 = flatten_VOTE3(L5171);
	L5128 = make_VOTE3(L95, L93, L94);
	L5171 = if L5170 = 2 then L5126 else if L5170 = 3 then L5127 else if L5170 = 1 then L5128 else if L5170 = 4 then L5128 else if L5170 = 0 then L5128 else L5128;
	L9 = I1;
	L10 = I2;
	L11 = I1;
	L12 = I3;
	L13 = I1;
	L14 = I4;
	L15 = I2;
	L16 = I3;
	L18 = I4;
	L17 = I2;
	L29 = I3;
	L30 = I4;
	L31 = I1;
	L32 = I2;
	L33 = I4;
	L34 = I1;
	L45 = I2;
	L46 = I3;
	L47 = I1;
	L49 = I1;
	L50 = I4;
	L51 = I3;
	L56 = I1;
	L55 = I3;
	L57 = I4;
	L59 = I1;
	L60 = I2;
	L61 = I4;
	L63 = I1;
	L70 = I2;
	L76 = I3;
	L64 = I2;
	L65 = I3;
	L66 = I4;
	L72 = I1;
	L73 = I3;
	L74 = I4;
	L80 = I1;
	L81 = I2;
	L82 = I4;
	L83 = I1;
	L84 = I2;
	L85 = I3;
	L5170 = Local_number_NF;
	L95 = I1;
	L93 = I2;
	L94 = I3;
	Local_N_1 = L97;
	Local_N_2 = L98;
	Local_N_3 = L99;
	L263 = L200.status;
	L264 = L201.status;
	L265 = L222.status;
	L266 = L223.status;
	L271 = L234.status;
	L272 = L236.status;
	L273 = L233.status;
	L274 = L235.status;
	L299 = L247.status;
	L300 = L249.status;
	L301 = L246.status;
	L302 = L248.status;
	L325 = L260.status;
	L326 = L262.status;
	L327 = L259.status;
	L328 = L261.status;
	L267 = not L263;
	L268 = not L264;
	L269 = not L265;
	L270 = not L266;
	L329 = L267 and L268 and L269 and L270;
	L280 = not L271;
	L276 = not L272;
	L277 = not L273;
	L278 = not L274;
	L295 = L271 and L276 and L277 and L278;
	L296 = L280 and L272 and L277 and L278;
	L297 = L280 and L276 and L273 and L278;
	L298 = L277 and L276 and L280 and L274;
	L332 = L295 or L296 or L297 or L298;
	L304 = not L299;
	L309 = not L300;
	L313 = not L301;
	L317 = not L302;
	L321 = L304 and L300 and L301 and L302;
	L322 = L309 and L299 and L301 and L302;
	L323 = L313 and L299 and L300 and L302;
	L324 = L317 and L299 and L300 and L301;
	L336 = L321 or L322 or L323 or L324;
	L339 = L325 and L326 and L327 and L328;
	L338 = if L339 then L341 else L340;
	L343 = if L329 then L330 else L331;
	L331 = if L332 then L333 else L335;
	L335 = if L336 then L337 else L338;
	L200 = I1;
	L201 = I2;
	L222 = I3;
	L223 = I4;
	L234 = I1;
	L236 = I2;
	L233 = I3;
	L235 = I4;
	L247 = I1;
	L249 = I2;
	L246 = I3;
	L248 = I4;
	L260 = I1;
	L262 = I2;
	L259 = I3;
	L261 = I4;
	L330 = FOURTH_INPUT;
	L333 = THIRD_INPUT;
	L337 = FIRST_INPUT;
	L341 = NO_INPUT;
	L340 = SECOND_INPUT;
	Local_number_NF = L343;
	L347 = L344.status;
	L350 = L344.value;
	L351 = L348 = L347;
	L352 = L350 = L349;
	L950 = L351 and L352;
	L542 = L944.status;
	L544 = L944.value;
	L546 = L547 = L542;
	L545 = L544 = L548;
	L951 = L546 and L545;
	L739 = L946.status;
	L741 = L946.value;
	L743 = L744 = L739;
	L742 = L741 = L745;
	L952 = L743 and L742;
	L936 = L948.status;
	L938 = L948.value;
	L940 = L941 = L936;
	L939 = L938 = L942;
	L953 = L940 and L939;
	L959 = L950 or L951 or L952 or L953;
	L958 = L954 = L955;
	L957 = if L958 then L962 else L974;
	L962 = if L959 then L960 else L961;
	L965 = L964.value;
	L967 = L963.value;
	L969 = L965 = L966;
	L970 = L966 = L967;
	L976 = L969 and L970;
	L973 = L971 = L972;
	L974 = if L973 then L975 else L981;
	L975 = if L976 then L977 else L998;
	L980 = L978 = L979;
	L981 = if L980 then L1040 else L1139;
	L986 = L994.value;
	L990 = L995.value;
	L996 = L986 = L988;
	L997 = L988 = L990;
	L999 = L996 or L997;
	L998 = if L999 then L1000 else L1001;
	L1002 = L1012.value;
	L1006 = L1011.value;
	L1013 = L1002 = L1004;
	L1014 = L1004 = L1006;
	L1015 = L1004 = L1009;
	L1009 = L1010.value;
	L1019 = not L1013;
	L1023 = not L1014;
	L1029 = not L1015;
	L1037 = L1013 and L1014 and L1015;
	L1034 = L1019 and L1014 and L1015;
	L1035 = L1023 and L1013 and L1015;
	L1036 = L1014 and L1029 and L1013;
	L1045 = L1019 and L1023 and L1029;
	L1041 = L1034 or L1035 or L1036;
	L1040 = if L1037 then L1038 else L1044;
	L1044 = if L1041 then L1042 else L1046;
	L1046 = if L1045 then L1047 else L1048;
	L1051 = L1059.value;
	L1049 = L1060.value;
	L1063 = L1051 = L1050;
	L1064 = L1050 = L1049;
	L1056 = L1061.value;
	L1053 = L1062.value;
	L1065 = L1056 = L1050;
	L1066 = L1050 = L1053;
	L1067 = not L1063;
	L1068 = not L1064;
	L1069 = not L1065;
	L1070 = not L1066;
	L1127 = L1067 and L1068 and L1069 and L1070;
	L1124 = L1063 and L1064 and L1065 and L1066;
	L1094 = L1067 and L1064 and L1065 and L1066;
	L1095 = L1068 and L1063 and L1065 and L1066;
	L1096 = L1063 and L1064 and L1069 and L1066;
	L1097 = L1063 and L1064 and L1065 and L1070;
	L1114 = L1063 and L1068 and L1069 and L1070;
	L1115 = L1067 and L1064 and L1069 and L1070;
	L1117 = L1067 and L1068 and L1069 and L1066;
	L1116 = L1067 and L1068 and L1065 and L1070;
	L1121 = L1094 or L1095 or L1096 or L1097;
	L1118 = L1114 or L1115 or L1116 or L1117;
	L1122 = if L1118 then L1119 else L1120;
	L1131 = if L1121 then L1123 else L1122;
	L1133 = if L1124 then L1130 else L1131;
	L1137 = if L1127 then L1132 else L1133;
	L1136 = L1134 = L1135;
	L1139 = if L1136 then L1137 else L1138;
	L344 = I1;
	L348 = NO_FAULT;
	L349 = VALUE_1;
	L547 = NO_FAULT;
	L548 = VALUE_1;
	L744 = NO_FAULT;
	L745 = VALUE_1;
	L941 = NO_FAULT;
	L942 = VALUE_1;
	L944 = I2;
	L946 = I3;
	L948 = I4;
	L954 = Local_number_NF;
	L955 = FIRST_INPUT;
	Local_number_NV = L957;
	L960 = FIRST_INPUT;
	L961 = NO_INPUT;
	L964 = Local_N_1;
	L966 = VALUE_1;
	L963 = Local_N_2;
	L971 = Local_number_NF;
	L972 = SECOND_INPUT;
	L977 = SECOND_INPUT;
	L978 = Local_number_NF;
	L979 = THIRD_INPUT;
	L988 = VALUE_1;
	L994 = Local_N_1;
	L995 = Local_N_2;
	L1000 = FIRST_INPUT;
	L1001 = NO_INPUT;
	L1004 = VALUE_1;
	L1012 = Local_N_1;
	L1011 = Local_N_2;
	L1010 = Local_N_3;
	L1038 = THIRD_INPUT;
	L1042 = SECOND_INPUT;
	L1048 = FIRST_INPUT;
	L1047 = NO_INPUT;
	L1050 = VALUE_1;
	L1059 = I1;
	L1060 = I2;
	L1061 = I3;
	L1062 = I4;
	L1119 = FIRST_INPUT;
	L1120 = SECOND_INPUT;
	L1123 = THIRD_INPUT;
	L1130 = FOURTH_INPUT;
	L1132 = NO_INPUT;
	L1135 = FOURTH_INPUT;
	L1134 = Local_number_NF;
	L1138 = NO_INPUT;
	--%PROPERTY L43;
	--%PROPERTY L1029;
	--%PROPERTY L965;
	--%PROPERTY L966;
	--%PROPERTY L1051;
	--%PROPERTY L967;
tel

